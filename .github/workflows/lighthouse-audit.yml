name: Daily Lighthouse Audit

on:
  schedule:
    - cron: '30 21 * * *'  # 03:00 AM IST
  workflow_dispatch:

jobs:
  lighthouse-audit:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Lighthouse globally
        run: npm install -g lighthouse

      - name: Run Lighthouse and create Markdown report
        run: |
          set -e
          mkdir -p "Daily audits"
          DATE=$(date +%F)
          
          echo "Running Lighthouse directly..."
          lighthouse https://krajtilak.vercel.app \
            --output=json \
            --output-path=lighthouse-report.json \
            --chrome-flags="--no-sandbox --disable-dev-shm-usage --disable-gpu --headless --disable-web-security" \
            --quiet || {
            echo "Lighthouse failed, trying with different flags..."
            lighthouse https://krajtilak.vercel.app \
              --output=json \
              --output-path=lighthouse-report.json \
              --preset=desktop \
              --chrome-flags="--no-sandbox --headless" \
              --quiet
          }

          if [ ! -f "lighthouse-report.json" ]; then
            echo "Lighthouse report not generated!"
            exit 1
          fi

          echo "## Lighthouse Report â€“ $DATE" > "Daily audits/lighthouse-audit-$DATE.md"
          echo "URL: https://krajtilak.vercel.app" >> "Daily audits/lighthouse-audit-$DATE.md"
          echo "" >> "Daily audits/lighthouse-audit-$DATE.md"

          # Extract scores using Node.js
          node -e "
            const fs = require('fs');
            try {
              const report = JSON.parse(fs.readFileSync('lighthouse-report.json', 'utf8'));
              const categories = report.categories;
              
              if (!categories) {
                console.log('- Error: No categories found in report');
                process.exit(1);
              }
              
              const scores = {
                'Performance': Math.floor((categories.performance?.score || 0) * 100),
                'Accessibility': Math.floor((categories.accessibility?.score || 0) * 100),
                'Best Practices': Math.floor((categories['best-practices']?.score || 0) * 100),
                'SEO': Math.floor((categories.seo?.score || 0) * 100)
              };
              
              Object.entries(scores).forEach(([key, value]) => {
                console.log(\`- \${key}: \${value}%\`);
              });
              
              // Add some key metrics
              const metrics = report.audits;
              if (metrics['first-contentful-paint']) {
                console.log(\`- First Contentful Paint: \${Math.round(metrics['first-contentful-paint'].numericValue)}ms\`);
              }
              if (metrics['largest-contentful-paint']) {
                console.log(\`- Largest Contentful Paint: \${Math.round(metrics['largest-contentful-paint'].numericValue)}ms\`);
              }
              if (metrics['cumulative-layout-shift']) {
                console.log(\`- Cumulative Layout Shift: \${metrics['cumulative-layout-shift'].numericValue.toFixed(3)}\`);
              }
              
            } catch (error) {
              console.log('- Error parsing report:', error.message);
              process.exit(1);
            }
          " >> "Daily audits/lighthouse-audit-$DATE.md"

          echo "" >> "Daily audits/lighthouse-audit-$DATE.md"
          echo "Report generated at: $(date)" >> "Daily audits/lighthouse-audit-$DATE.md"

          # Clean up
          rm lighthouse-report.json

      - name: Commit the report
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          
          DATE=$(date +%F)
          
          if [ -f "Daily audits/lighthouse-audit-$DATE.md" ]; then
            git add "Daily audits/lighthouse-audit-$DATE.md"
            if git diff --staged --quiet; then
              echo "No changes to commit"
            else
              git commit -m "Daily Lighthouse Audit - $DATE"
              git push
            fi
          else
            echo "Report file not found, nothing to commit"
            exit 1
          fi